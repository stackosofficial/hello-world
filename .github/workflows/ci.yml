name: CI

on:
  push:
    branches: [master, staging]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ################################################################################ BUILD
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - if: ${{ github.ref == 'refs/heads/master' }}
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          WITH_V: false

      - id: image-tag
        run: |
          if [ ${{ github.ref }} == 'refs/heads/master' ]; then
            echo "::set-output name=tag::$(git describe --tags $(git rev-list --tags --max-count=1))"
          else
            echo "::set-output name=tag::staging-$(git rev-parse --short HEAD)"
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Build & Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:${{ steps.image-tag.outputs.tag }}

  ################################################################################ STAGING
  # deploy-to-gke-staging:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-image-staging
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Get GKE Credentials
  #       uses: 'google-github-actions/get-gke-credentials@v0.2.1'
  #       with:
  #         cluster_name: 'stackos-infra-node-4'
  #         location: 'us-central1'
  #         credentials: ${{ secrets.GCP_CREDENTIALS }}

  #     - name: Deploy Docker image to GKE - Staging
  #       run: |
  #         kubectl patch deployment ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} -p '{"spec":{"template":{"spec":{"containers":[{"name":"${{ secrets.PROJECT_NAME }}","image":"${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:${{ needs.build-and-push-image-staging.outputs.image-tag }}"}]}}}}'
  #         kubectl describe deployments.apps ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} |grep -i image
  #         kubectl get po --namespace ${{ secrets.NAMESPACE }} |grep ${{ secrets.PROJECT_NAME }}

  ################################################################################ MASTER
  # deploy-to-gke-master:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-image-master

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Get GKE Credentials
  #       uses: 'google-github-actions/get-gke-credentials@v0.2.1'
  #       with:
  #         cluster_name: 'stackos-infra-node-4'
  #         location: 'us-central1'
  #         credentials: ${{ secrets.GCP_CREDENTIALS }}

  #     - name: Deploy Docker image to GKE - master
  #       run: |
  #         kubectl patch deployment ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} -p '{"spec":{"template":{"spec":{"containers":[{"name":"${{ secrets.PROJECT_NAME }}","image":"${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:${{ needs.build-and-push-image-master.outputs.image-tag }}"}]}}}}'
  #         kubectl describe deployments.apps ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} |grep -i image
  #         kubectl get po --namespace ${{ secrets.NAMESPACE }} |grep ${{ secrets.PROJECT_NAME }}
