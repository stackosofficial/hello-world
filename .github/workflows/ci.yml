name: CI

on:
  push:
    branches: [master, staging]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ################################################################################ DOCKER IMAGE TAG
  create-docker-image-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      # - name: Bump version and push tag
      #   uses: anothrNick/github-tag-action@1.36.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      #     WITH_V: false

      - name: Set environment variables
        run: |
          echo "IMAGE_TAG_STAGING=staging-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "IMAGE_TAG_MASTER=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

  ################################################################################ DOCKERHUB LOGIN
  login-to-dockerhub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

  ################################################################################ STAGING
  build-and-push-image-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: login-to-dockerhub

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Build & Push for staging
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:${{ env.IMAGE_TAG_STAGING }}

  ################################################################################ MASTER
  build-and-push-image-master:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: login-to-dockerhub

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          WITH_V: false

      - name: Docker Build & Push for master
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:$(git describe --tags $(git rev-list --tags --max-count=1))

  ################################################################################ STAGING
  get-gke-credentials-staging:
    runs-on: ubuntu-latest
    needs: build-and-push-image-staging

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get GKE Credentials
        uses: 'google-github-actions/get-gke-credentials@v0.2.1'
        with:
          cluster_name: 'stackos-infra-node-4'
          location: 'us-central1'
          credentials: ${{ secrets.GCP_CREDENTIALS }}

  ################################################################################ MASTER
  get-gke-credentials-master:
    runs-on: ubuntu-latest
    needs: build-and-push-image-master

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get GKE Credentials
        uses: 'google-github-actions/get-gke-credentials@v0.2.1'
        with:
          cluster_name: 'stackos-infra-node-4'
          location: 'us-central1'
          credentials: ${{ secrets.GCP_CREDENTIALS }}

  ################################################################################ STAGING
  deploy-to-gke-staging:
    runs-on: ubuntu-latest
    needs: get-gke-credentials-staging

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy Docker image to GKE - Staging
        run: |
          kubectl patch deployment ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} -p '{"spec":{"template":{"spec":{"containers":[{"name":"${{ secrets.PROJECT_NAME }}","image":"${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:$(git rev-list --tags --max-count=1)"}]}}}}'
          kubectl describe deployments.apps ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} |grep -i image
          kubectl get po --namespace ${{ secrets.NAMESPACE }} |grep ${{ secrets.PROJECT_NAME }}

  ################################################################################ MASTER
  deploy-to-gke-master:
    runs-on: ubuntu-latest
    needs: get-gke-credentials-master

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy Docker image to GKE - master
        run: |
          kubectl patch deployment ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} -p '{"spec":{"template":{"spec":{"containers":[{"name":"${{ secrets.PROJECT_NAME }}","image":"${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:$(git describe --tags $(git rev-list --tags --max-count=1))"}]}}}}'
          kubectl describe deployments.apps ${{ secrets.PROJECT_NAME }} --namespace ${{ secrets.NAMESPACE }} |grep -i image
          kubectl get po --namespace ${{ secrets.NAMESPACE }} |grep ${{ secrets.PROJECT_NAME }}
